---
# yaml-language-server: $schema=https://kubernetes-schemas.trux.dev/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: minio-tenant
  namespace: data
spec:
  interval: 15m
  chart:
    spec:
      chart: tenant
      version: 4.5.8
      sourceRef:
        kind: HelmRepository
        name: minio
        namespace: flux-system
  install:
    createNamespace: true
    remediation: # perform remediation when helm install fails
      retries: 5
  upgrade:
    remediation: # perform remediation when helm upgrade fails
      retries: 5
      remediateLastFailure: true # remediate the last failure, when no retries remain
    cleanupOnFail: true
  values:
    secrets:
      accessKey: ${SECRET_MINIO_ACCESSKEY}
      secretKey: ${SECRET_MINIO_SECRETKEY}
    tenant:
      name: minio
      pools:
      ## Servers specifies the number of MinIO Tenant Pods / Servers in this pool.
      ## For standalone mode, supply 1. For distributed mode, supply 4 or more.
      ## Note that the operator does not support upgrading from standalone to distributed mode.
      - servers: 1
        ## custom name for the pool
        name: pool-0
        ## volumesPerServer specifies the number of volumes attached per MinIO Tenant Pod / Server.
        volumesPerServer: 2
        ## size specifies the capacity per volume
        size: 100Gi
        ## storageClass specifies the storage class name to be used for this pool
        storageClassName: nfs-csi
        ## Used to specify annotations for pods
        annotations: {}
        ## Used to specify labels for pods
        labels: {}
        ## Used to specify a toleration for a pod
        tolerations: []
        ## nodeSelector parameters for MinIO Pods. It specifies a map of key-value pairs. For the pod to be
        ## eligible to run on a node, the node must have each of the
        ## indicated key-value pairs as labels.
        ## Read more here: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
        nodeSelector: {}
        ## Affinity settings for MinIO pods. Read more about affinity
        ## here: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity.
        affinity: {}
        ## Configure resource requests and limits for MinIO containers
        resources: {}
        ## Configure security context
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
          fsGroup: 1000
          runAsNonRoot: true
        ## Configure container security context
        containerSecurityContext:
          runAsUser: 1000
          runAsGroup: 1000
          runAsNonRoot: true
        ## Configure topology constraints
        topologySpreadConstraints: []
        ## Configure Runtime Class
        # runtimeClassName: ""
      buckets:
        - name: "backups"
          objectLock: false
      log:
        disabled: true
      prometheus:
        disabled: true
      certificate:
        requestAutoCert: false
    ingress:
      api:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: haproxy
        host: "minio.${INTERNAL_DOMAIN}"
      console:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: haproxy
        host: "minio-console.${INTERNAL_DOMAIN}"